(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{328:function(e,t,s){"use strict";s.r(t);var n=s(4),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"可参考的资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可参考的资料"}},[e._v("#")]),e._v(" 可参考的资料")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.chrome.com/extensions",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方开发文档"),s("OutboundLink")],1),e._v(" ：目前全英文，需要翻**墙。")]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/sxei/chrome-plugin-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chrome插件开发全攻略"),s("OutboundLink")],1),e._v("：github上star挺多的一个repo，开发前可先过一下。")])]),e._v(" "),s("p",[e._v("搜索到的资料可以作为参考，实际开发应以官方最新文档为准。")]),e._v(" "),s("h2",{attrs:{id:"文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件结构"}},[e._v("#")]),e._v(" 文件结构")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("manifest.json")]),e._v("配置文件："),s("strong",[e._v("必须")]),e._v("，"),s("a",{attrs:{href:"https://developer.chrome.com/extensions/manifest",target:"_blank",rel:"noopener noreferrer"}},[e._v("详细说明文档"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("其他"),s("code",[e._v("JavaScript")]),e._v("、"),s("code",[e._v("HTML")]),e._v("、"),s("code",[e._v("CSS")]),e._v("文件：根据功能和个人喜好，进行增减以及结构调整。")])]),e._v(" "),s("p",[e._v("开发扩展程序与WEB开发类似，主要应用的技术为"),s("code",[e._v("JavaScript")]),e._v("、"),s("code",[e._v("HTML")]),e._v("、"),s("code",[e._v("CSS")]),e._v("等，再根据功能，调用chrome提供的各类API。")]),e._v(" "),s("p",[e._v("最终的文件结构可以类似这样：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("my-extension\n  - manifest.json  // required\n  pages\n    - background.html\n    - popup.html\n  icons\n    - logo_16.png\n    - logo_48.png\n    - logo_128.png\n  js\n    - background.js\n    - content.js\n    - inject.js\n    - popup.js\n  css\n    - popup.css\n")])])]),s("p",[e._v("开发时为防止后续功能繁多，我使用了Vue-Cli初始化项目，并使用插件"),s("a",{attrs:{href:"https://github.com/superoo7/vue-cli-plugin-chrome-ext",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-cli-plugin-chrome-ext"),s("OutboundLink")],1),e._v("修改文件结构，再根据自己需要修改vue.config.js以修改webpack的一些配置。")]),e._v(" "),s("h2",{attrs:{id:"web页面与扩展程序之间通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web页面与扩展程序之间通信"}},[e._v("#")]),e._v(" web页面与扩展程序之间通信")]),e._v(" "),s("h3",{attrs:{id:"官方相关的文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官方相关的文档"}},[e._v("#")]),e._v(" 官方相关的文档")]),e._v(" "),s("ul",[s("li",[e._v("消息通信 "),s("a",{attrs:{href:"https://developer.chrome.com/extensions/messaging#external-webpage",target:"_blank",rel:"noopener noreferrer"}},[e._v("从web页面发送消息"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("外部连接相关 "),s("a",{attrs:{href:"https://developer.chrome.com/extensions/manifest/externally_connectable",target:"_blank",rel:"noopener noreferrer"}},[e._v("externally_connectable"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("监听事件 "),s("a",{attrs:{href:"https://developer.chrome.com/extensions/runtime#event-onMessageExternal",target:"_blank",rel:"noopener noreferrer"}},[e._v("onMessageExternal用法"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"权限声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限声明"}},[e._v("#")]),e._v(" 权限声明")]),e._v(" "),s("p",[e._v("首先，需要在"),s("code",[e._v("manifest.json")]),e._v("中，配置"),s("code",[e._v("externally_connectable")]),e._v("字段，来声明哪些web应用可以通过后面的方式，与扩展程序建立连接。在matches字段中，注明需要通信的web网站清单。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"externally_connectable": {\n  "matches": ["*://*.example.com/*"]\n}\n')])])]),s("p",[e._v("matches数组的每一项为URL字符串。且URL值必须要包含到二级域名级别。")]),e._v(" "),s("p",[s("code",[e._v("externally_connectable")]),e._v("字段，还可以声明"),s("code",[e._v("ids")]),e._v("字段，来指定需要通信的其他Chrome应用或者其他扩展程序。")]),e._v(" "),s("h3",{attrs:{id:"通信方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信方式"}},[e._v("#")]),e._v(" 通信方式")]),e._v(" "),s("p",[e._v("从Web页面向扩展程序发送消息，可以使用"),s("code",[e._v("chrome.runtime.sendMessage")]),e._v(",需要传入扩展程序的ID，回调函数可以接收Chrome扩展响应的消息：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const extensionId = 'deakpiepsidfpdfdioffidjfifjtest' // 想要与之通信的扩展ID\n\n// 向Chrome扩展发送请求\nchrome.runtime.sendMessage(extensionId, {\n  event: 'requestEvent',\n  data: requestData,\n}, (response) => {\n    console.log('res data', response)\n}\n")])])]),s("p",[e._v("在Chrome扩展内使用"),s("code",[e._v("chrome.runtime.onMessageExternal.addListener")]),e._v("监听消息，接收后用"),s("code",[e._v("sendResponse")]),e._v("发送响应消息：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("chrome.runtime.onMessageExternal.addListener(async (request, sender, sendResponse) => {\nif (request.event == 'requestEvent') {\n  const res = 'res message'\n  sendResponse(res)\n}\n})\n\n")])])]),s("h2",{attrs:{id:"监听和修改web请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听和修改web请求"}},[e._v("#")]),e._v(" 监听和修改Web请求")]),e._v(" "),s("p",[e._v("文档位置："),s("a",{attrs:{href:"https://developer.chrome.com/extensions/webRequest",target:"_blank",rel:"noopener noreferrer"}},[e._v("webRequest"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("依然是要先进行权限声明：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('  {\n      "name": "My extension",\n      ...\n      "permissions": [\n        "webRequest",\n        "*://*.google.com/"\n      ],\n      ...\n  }\n')])])]),s("p",[e._v("Chrome提供了一系列的事件来监听Web请求生命周期的各个阶段，其中"),s("code",[e._v("onBeforeSendHeaders")]),e._v("事件被触发的阶段，可以用来增、删、改HTTP请求的headers。也可以在这个事件中取消请求。")]),e._v(" "),s("p",[e._v("用法， 修改之后return新的配置：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("chrome.webRequest.onBeforeSendHeaders.addListener((details) => {\n  const { requestHeaders } = details\n\n  requestHeaders.push({\n      name: 'x-request-xx',\n      value: '...'\n  })\n\n  return { requestHeaders: requestHeaders }\n})\n")])])]),s("h2",{attrs:{id:"cookies操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookies操作"}},[e._v("#")]),e._v(" cookies操作")]),e._v(" "),s("p",[e._v("使用cookie相关的API，需要先在"),s("code",[e._v("manifest.json")]),e._v("中的"),s("code",[e._v("permissions")]),e._v("字段进行权限声明，要访问cookies的host也要一并声明：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "name": "My extension",\n  ...\n  "permissions": [\n    "cookies",\n    "*://*.google.com/"\n  ],\n  ...\n}\n\n')])])]),s("p",[e._v("Chrome共提供了5个方法和1个监听事件，用于cookie的操作和对cookie变化的监听：")]),e._v(" "),s("p",[s("strong",[e._v("方法")]),e._v("：")]),e._v(" "),s("ul",[s("li",[e._v("get: chrome.cookies.get(object details, function callback)")]),e._v(" "),s("li",[e._v("getAll")]),e._v(" "),s("li",[e._v("set")]),e._v(" "),s("li",[e._v("remove")]),e._v(" "),s("li",[e._v("getAllCookieStores")])]),e._v(" "),s("p",[s("strong",[e._v("事件")]),e._v("：")]),e._v(" "),s("ul",[s("li",[e._v("onChanged")])]),e._v(" "),s("h3",{attrs:{id:"获取指定名称的cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取指定名称的cookie"}},[e._v("#")]),e._v(" 获取指定名称的cookie")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("chrome.cookies.get({\n  url: 'https://example.com',\n  name: 'token',\n}, (cookie) => {\n  console.log(‘token: ’, cookie.value) // cookie为获取到的cookie对象\n})\n")])])]),s("h3",{attrs:{id:"设置cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置cookie"}},[e._v("#")]),e._v(" 设置cookie")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" chrome.cookies.set({\n    url: 'http://example.com',\n    name: 'x-request-xx',\n    value: 'value...',\n  }, (cookie) => {\n    console.log('set cookie', cookie)\n  })\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),s("p",[e._v("Chrome扩展与web之间通信，还有一些其他方式，但个人认为按照官方文档中推荐的方式比较容易使用。")]),e._v(" "),s("p",[e._v("在开发测试的过程中，如果担心扩展的ID值发生变化，可以在Chrome的Dashboard中建立好应用后，把生成的public key的值配置到manifest.json的key字段中，这样就能保证开发过程中也能生成唯一固定的的ID了。但现在新版的Dashboard改版后好像把public key隐藏掉了...")]),e._v(" "),s("p",[e._v("如有其它的开发技巧，还请看到这篇文章的人赐教哇~")])])}),[],!1,null,null,null);t.default=a.exports}}]);